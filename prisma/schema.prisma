// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int              @id @default(autoincrement())
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  email          String           @unique
  password       String
  fullName       String?
  ForgetPassword ForgetPassword[]
}

model Satisfied {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  icon      String
  commment  String
  star      Float?   @default(5)
  name      String
  broker    String?
}

model Article {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  title     String
  body      String
  readTime  Int
  image     String
  name      String
  pageName  String?  @default("")
  keywords  String?  @default("auto transport company, car shipping company, car shipping companies, companies that ship cars, auto transport companies, car transport companies, best car shipping company, best company to ship a car, car moving companies, car hauling companies, auto shipping companies, vehicle transport company, vehicle transportation company, safeeds, safeeds transport, safeeds transport inc, vehicle shipping, new york auto shipping")
}

model ForgetPassword {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  expireIn  DateTime
  user      User     @relation(fields: [userId], references: [id])
  code      Int
  userId    Int
  isChecked Boolean  @default(false)
}

model FAQ {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  title       String   @default("")
  description String   @default("")
}

model TeamUser {
  id             Int              @id @default(autoincrement())
  createdAt      DateTime         @default(now())
  firstname      String
  username       String           @unique
  lastname       String
  employeeSince  DateTime?
  employeeInfo   String?
  email          String
  phone          String
  hobbies        String
  gender         Gender           @default(MALE)
  TeamUserReview TeamUserReview[]
}

model TeamUserReview {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  startCount  Int      @default(4)
  title       String
  description String
  teamUserId  Int
  teamUser    TeamUser @relation(fields: [teamUserId], references: [id])
}

model CompanyReview {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  startCount  Int      @default(4)
  title       String
  description String
  icon        String
}

model Blog {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  title     String
  icon      String
  content   Int[]
}

model Content {
  id      Int             @id @default(autoincrement())
  type    BlogContentType
  content String
}

enum BlogContentType {
  TEXT
  IMAGE
}

enum Gender {
  MALE
  FEMALE
}
